import toolforge
import pymysql
from botbase import *

conn = toolforge.connect('enwiki', cluster = "analytics" )
query1 = '''
select page_namespace, page_title, count(*) as page_count
from linter
join page on page.page_id = linter.linter_page and linter_cat != 20
where page.page_namespace = 0
group by page.page_id
order by count(*) desc, page_title asc
limit 1000;
'''
query2 = '''
select page_namespace, page_title, count(*) as page_count
from linter
join page on page.page_id = linter.linter_page and linter_cat != 20
group by page.page_id
order by count(*) desc, page_title asc
limit 1000;
'''

def genTableRows(data):
    tablerows = []
    for row in data:
        page_title = row.pop('page_title').decode()
        link = p.page.BaseLink(page_title, row['page_namespace'])
        canonical_title = link.canonical_title().replace(' ', '_')
        canonical_title_spaces = canonical_title.replace('_', ' ')
        tablerows.append('\n|-\n|{{Link to edit|' + canonical_title_spaces + '}}')
        tablerows.append('\n|' + '[https://en.wikipedia.org/wiki/Special:LintErrors?titlesearch=' + canonical_title + '&exactmatch=1 lints]')
        for param in ['page_count']:
            tablerows.append('\n|' + str(row[param] or ''))
    return tablerows

with conn.cursor(pymysql.cursors.DictCursor) as cur:
    cur.execute(query1)
    data = cur.fetchall()
    tablerows = genTableRows(data)
    page = p.Page(site, 'User:Galobot/report/Articles_by_Lint_Errors')
    page.text = ('Generated by [[Quarry:query/31876|this query]].' +
                ' For all pages, see [[User:Galobot/report/Pages by Lint Errors]].'
                ' Updated on ~~~~~. ' +
                '\n{| class="wikitable sortable"\n!Page title\n!Lint list\n!Lint errors' +
                ''.join(tablerows) +
                '\n|}')
    page.savewithshutoff(summary = 'Update "Articles by Lint Errors" report', minor = False) #edit page

with conn.cursor(pymysql.cursors.DictCursor) as cur:
    cur.execute(query2)
    data = cur.fetchall()
    tablerows = genTableRows(data)
    page = p.Page(site, 'User:Galobot/report/Pages_by_Lint_Errors')
    page.text = ('Pages by lint errors.' +
                ' For only articles, see [[User:Galobot/report/Articles by Lint Errors]]'
                ' Updated on ~~~~~. ' +
                '\n{| class="wikitable sortable"\n!Page title\n!Lint list\n!Lint errors' +
                ''.join(tablerows) +
                '\n|}')
    page.savewithshutoff(summary = 'Update "Pages by Lint Errors" report', minor = False) #edit page

conn.close()

